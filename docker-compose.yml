---
services:
  # run postgres for proxy service to store observability metrics
  postgres:
    image: postgres:15
    env_file: .env
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    expose:
      - "${POSTGRES_CONTAINER_PORT}"

  # run redis for proxy service to cache responses
  redis:
    image: "bitnami/redis:latest"
    env_file: .env
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}"
    expose:
      - "${REDIS_CONTAINER_PORT}"

  # run single validator kava node to provide a local kava network for development and testing of the proxy service
  kava-validator:
    image: kava/kava:${KAVA_CONTAINER_TAG}
    entrypoint: /docker/kava/kava-validator-entrypoint.sh
    env_file: .env
    volumes:
      - ./docker/kava-validator:/docker/kava
      - ./docker/shared:/docker/shared
    ports:
      - "${KAVA_HOST_COSMOS_RPC_PORT}:${KAVA_CONTAINER_COSMOS_RPC_PORT}"
      - "${KAVA_HOST_EVM_RPC_PORT}:${KAVA_CONTAINER_EVM_RPC_PORT}"
    # expose ports for other services to be able to connect to within
    # the default docker-compose network
    expose:
      - "${KAVA_CONTAINER_COSMOS_RPC_PORT}"
      - "${KAVA_CONTAINER_EVM_RPC_PORT}"

  # peer node with api running validator's network
  kava-pruning:
    image: kava/kava:${KAVA_CONTAINER_TAG}
    entrypoint: /docker/shared/kava-entrypoint.sh
    env_file: .env
    volumes:
      - ./docker/shared:/docker/shared
    ports:
      - "${KAVA_PRUNING_HOST_COSMOS_RPC_PORT}:${KAVA_CONTAINER_COSMOS_RPC_PORT}"
      - "${KAVA_PRUNING_HOST_EVM_RPC_PORT}:${KAVA_CONTAINER_EVM_RPC_PORT}"
    # expose ports for other services to be able to connect to within
    # the default docker-compose network
    expose:
      - "${KAVA_CONTAINER_COSMOS_RPC_PORT}"
      - "${KAVA_CONTAINER_EVM_RPC_PORT}"

  # shards are in name only. they are standard peer nodes, but will only recieve traffic
  # for a specific block range. kava-shard-10 receives requests for heights 1-10
  kava-shard-10:
    image: kava/kava:${KAVA_CONTAINER_TAG}
    entrypoint: /docker/shared/kava-entrypoint.sh
    env_file: .env
    volumes:
      - ./docker/shared:/docker/shared
    # expose ports for other services to be able to connect to within
    # the default docker-compose network
    expose:
      - "${KAVA_CONTAINER_COSMOS_RPC_PORT}"
      - "${KAVA_CONTAINER_EVM_RPC_PORT}"

  # shards are in name only. they are standard peer nodes, but will only recieve traffic
  # for a specific block range. kava-shard-20 receives requests for heights 11-20
  kava-shard-20:
    image: kava/kava:${KAVA_CONTAINER_TAG}
    entrypoint: /docker/shared/kava-entrypoint.sh
    env_file: .env
    volumes:
      - ./docker/shared:/docker/shared
    # expose ports for other services to be able to connect to within
    # the default docker-compose network
    expose:
      - "${KAVA_CONTAINER_COSMOS_RPC_PORT}"
      - "${KAVA_CONTAINER_EVM_RPC_PORT}"

  # run proxy service to observe, route, and scale requests to kava api endpoints
  proxy:
    build:
      dockerfile: local.Dockerfile
    env_file: .env
    ports:
      - "${PROXY_HOST_PORT}:${PROXY_CONTAINER_PORT}"
      - "${PROXY_CONTAINER_EVM_RPC_PRUNING_PORT}:${PROXY_CONTAINER_PORT}"
      - "${TEST_UNCONFIGURED_PROXY_PORT}:${PROXY_CONTAINER_PORT}"
      - "${PROXY_HOST_DEBUG_PORT}:${PROXY_CONTAINER_DEBUG_PORT}"
    cap_add:
      - SYS_PTRACE # Allows for attaching debugger to process in this container
