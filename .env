##### Local development config

# Values used by make
CONTAINER_NAME=kava-proxy-service
IMAGE_NAME=kava-labs/kava-proxy-service
LOCAL_IMAGE_TAG=local
PRODUCTION_IMAGE_TAG=latest

# Values used by docker
# what version of kava is installed in the development version of the proxy service image
PROXY_KAVA_CLI_VERSION=v0.21.0

# Values used by docker-compose
POSTGRES_CONTAINER_PORT=5432
POSTGRES_HOST_PORT=5432

REDIS_CONTAINER_PORT=6379
REDIS_HOST_PORT=6379

KAVA_CONTAINER_TAG=v0.24.0
KAVA_CONTAINER_EVM_RPC_PORT=8545
KAVA_CONTAINER_COSMOS_RPC_PORT=26657

KAVA_HOST_EVM_RPC_PORT=8545
KAVA_HOST_COSMOS_RPC_PORT=26657
KAVA_PRUNING_HOST_EVM_RPC_PORT=8555
KAVA_PRUNING_HOST_COSMOS_RPC_PORT=26667

PROXY_CONTAINER_PORT=7777
PROXY_CONTAINER_EVM_RPC_PRUNING_PORT=7778
PROXY_HOST_PORT=7777
PROXY_CONTAINER_DEBUG_PORT=2345
PROXY_HOST_DEBUG_PORT=2345

##### E2E Testing Config
TEST_PROXY_SERVICE_EVM_RPC_URL=http://localhost:7777
TEST_PROXY_SERVICE_EVM_RPC_HOSTNAME=localhost:7777
TEST_PROXY_SERVICE_EVM_RPC_PRUNING_URL=http://localhost:7778
TEST_PROXY_BACKEND_EVM_RPC_HOST_URL=http://localhost:8545
TEST_DATABASE_ENDPOINT_URL=localhost:5432
TEST_PROXY_BACKEND_HOST_URL_MAP=localhost:7777>http://kava-validator:8545,localhost:7778>http://kava-pruning:8545
TEST_PROXY_HEIGHT_BASED_ROUTING_ENABLED=true
TEST_PROXY_PRUNING_BACKEND_HOST_URL_MAP=localhost:7777>http://kava-pruning:8545,localhost:7778>http://kava-pruning:8545
# What level of logging to use for service objects constructed during
# unit tests
TEST_SERVICE_LOG_LEVEL=ERROR
# endpoint the proxy service should use for querying
# evm blockchain information related to proxied requests
TEST_EVM_QUERY_SERVICE_URL=http://kava-validator:8545
# TEST_REDIS_ENDPOINT_URL is an url of redis
TEST_REDIS_ENDPOINT_URL=localhost:6379

##### Kava Node Config


##### Kava Proxy Config
# What port the proxy service listens on
PROXY_SERVICE_PORT=7777
LOG_LEVEL=TRACE
HTTP_READ_TIMEOUT_SECONDS=30
HTTP_WRITE_TIMEOUT_SECONDS=60
# Address of the origin server to proxy all requests to
PROXY_BACKEND_HOST_URL_MAP=localhost:7777>http://kava-validator:8545,localhost:7778>http://kava-pruning:8545
# height-based routing will look at the height of an incoming EVM request
# iff. the height is "latest", it routes to the corresponding PROXY_PRUNING_BACKEND_HOST_URL_MAP value
# otherwise, it falls back to the value in PROXY_BACKEND_HOST_URL_MAP
PROXY_HEIGHT_BASED_ROUTING_ENABLED=true
PROXY_PRUNING_BACKEND_HOST_URL_MAP=localhost:7777>http://kava-pruning:8545,localhost:7778>http://kava-pruning:8545
# Configuration for the servcie to connect to it's database
DATABASE_NAME=postgres
DATABASE_ENDPOINT_URL=postgres:5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=password
DATABASE_SSL_ENABLED=false
DATABASE_READ_TIMEOUT_SECONDS=60
DATABASE_WRITE_TIMEOUT_SECONDS=30
DATABASE_MAX_IDLE_CONNECTIONS=5
DATABASE_CONNECTION_MAX_IDLE_SECONDS=5
DATABASE_MAX_OPEN_CONNECTIONS=20
# controls whether the service will attempt to run migrations when it starts
RUN_DATABASE_MIGRATIONS=true
DATABASE_QUERY_LOGGING_ENABLED=true
# How often the metric compaction routine will run
# defaults to 3600 / 1 hour if not set
METRIC_COMPACTION_ROUTINE_INTERVAL_SECONDS=5
# endpoint the proxy service should use for querying
# evm blockchain information related to proxied requests
EVM_QUERY_SERVICE_URL=http://kava-validator:8545
# Whether the proxy service should attempt to track and store metrics
# related to proxied requests
METRIC_COLLECTION_ENABLED=true
# How often the metric partitioning routine will run
# defaults to 86400 / 24 hours if not set
METRIC_PARTITIONING_ROUTINE_INTERVAL_SECONDS=60
# how long (after the proxy service starts) it will wait
# to run the first iteration of the metric partitioning routine
METRIC_PARTITIONING_ROUTINE_DELAY_FIRST_RUN_SECONDS=10
# How many days (starting from the time the routine runs)
# of partions should be created (idempotently)
# defaults to 7 days / 1 week if not set,
# max value of 28, min value of 1
METRIC_PARTITIONINING_PREFILL_PERIOD_DAYS=7
# Used by `ready` script to ensure metric partitions have been created.
MINIMUM_REQUIRED_PARTITIONS=30
# Whether metric pruning routines should run on the configured interval, defaults to true
METRIC_PRUNING_ENABLED=true
# How frequenlty metric pruning routines should run
# defaults to 1 day
METRIC_PRUNING_ROUTINE_INTERVAL_SECONDS=10
# how long (after the proxy service starts) it will wait
# to run the first iteration of the metric pruning routine
METRIC_PRUNING_ROUTINE_DELAY_FIRST_RUN_SECONDS=5
# The maximum number of days of request metrics
# that should be preserved measured
# from the time the pruning routine runs
# all metrics for earlier days will be truncated
METRIC_PRUNING_MAX_REQUEST_METRICS_HISTORY_DAYS=45
# CACHE_ENABLED specifies if cache should be enabled. By default cache is disabled.
CACHE_ENABLED=true
# REDIS_ENDPOINT_URL is an url of redis
REDIS_ENDPOINT_URL=redis:6379
REDIS_PASSWORD=
# CACHE_TTL_SECONDS is a TTL for cached evm requests
# CACHE_TTL_SECONDS should be specified in seconds
CACHE_TTL_SECONDS=600
# CACHE_INDEFINITELY overrides CACHE_TTL_SECONDS and sets TTL to infinity
# if CACHE_INDEFINITELY set to true, CACHE_TTL_SECONDS should be zero
CACHE_INDEFINITELY=false
# CACHE_PREFIX is used as prefix for any key in the cache, key has such structure:
# <cache_prefix>:evm-request:<method_name>:sha256:<sha256(body)>
# Possible values are testnet, mainnet, etc...
# CACHE_PREFIX must not contain colon symbol
CACHE_PREFIX=local-chain
# WHITELISTED_HEADERS contains comma-separated list of headers which has to be cached along with EVM JSON-RPC response
WHITELISTED_HEADERS=access-control-expose-headers,server,vary

##### Database Config
POSTGRES_PASSWORD=password


##### Redis Config
# for local development don't require a password to connect to the redis server
ALLOW_EMPTY_PASSWORD=yes
